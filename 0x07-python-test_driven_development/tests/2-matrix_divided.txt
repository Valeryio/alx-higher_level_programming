=========================================================
	How to use matrix_divided funtion
=========================================================

This library is very simple, since it only has one function called
``matrix_divided()``.

Importing dynamically the library to use
::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Not the right argument matrix
=============================
Testing the argument 'matrix' to have a list of list of integers or floats
::
	>>> matrix_divided([[1, 2, '4', 'm'], [1, 2, 3, 5], 'a', 'b'], 0)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Testing the argument 'matrix' to have a list of list of the same length
::
	>>> matrix_divided([[1, 2], [1, 2, 3]], 0)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size


Not the right argument div
===========================
Testing if the argument div is a number, or a float
::
	>>> matrix_divided([[2, 6], [4, 8]], 'a')
	Traceback (most recent call last):
		...
	TypeError: div must be a number


Testing if the argument div is equal to 0
::
	>>> matrix_divided([[2, 6], [4, 8]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
